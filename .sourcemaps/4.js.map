{"version":3,"sources":["../../src/pages/settings/settings.module.ts","../../src/pages/settings/settings.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\nimport { SettingsPage } from './settings';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SettingsPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SettingsPage),\r\n    TranslateModule.forChild()\r\n  ],\r\n  exports: [\r\n    SettingsPage\r\n  ]\r\n})\r\nexport class SettingsPageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.module.ts","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\n\r\nimport { Settings } from '../../providers/providers';\r\n\r\n/**\r\n * The Settings page is a simple form that syncs with a Settings provider\r\n * to enable the user to customize settings for the app.\r\n *\r\n */\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-settings',\r\n  templateUrl: 'settings.html'\r\n})\r\nexport class SettingsPage {\r\n  // Our local settings object\r\n  options: any;\r\n\r\n  settingsReady = false;\r\n\r\n  form: FormGroup;\r\n\r\n  profileSettings = {\r\n    page: 'profile',\r\n    pageTitleKey: 'SETTINGS_PAGE_PROFILE'\r\n  };\r\n\r\n  page: string = 'main';\r\n  pageTitleKey: string = 'SETTINGS_TITLE';\r\n  pageTitle: string;\r\n\r\n  subSettings: any = SettingsPage;\r\n\r\n  constructor(public navCtrl: NavController,\r\n    public settings: Settings,\r\n    public formBuilder: FormBuilder,\r\n    public navParams: NavParams,\r\n    public translate: TranslateService) {\r\n  }\r\n\r\n  _buildForm() {\r\n    let group: any = {\r\n      option1: [this.options.option1],\r\n      option2: [this.options.option2],\r\n      option3: [this.options.option3]\r\n    };\r\n\r\n    switch (this.page) {\r\n      case 'main':\r\n        break;\r\n      case 'profile':\r\n        group = {\r\n          option4: [this.options.option4]\r\n        };\r\n        break;\r\n    }\r\n    this.form = this.formBuilder.group(group);\r\n\r\n    // Watch the form for changes, and\r\n    this.form.valueChanges.subscribe((v) => {\r\n      this.settings.merge(this.form.value);\r\n    });\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    // Build an empty form for the template to render\r\n    this.form = this.formBuilder.group({});\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    // Build an empty form for the template to render\r\n    this.form = this.formBuilder.group({});\r\n\r\n    this.page = this.navParams.get('page') || this.page;\r\n    this.pageTitleKey = this.navParams.get('pageTitleKey') || this.pageTitleKey;\r\n\r\n    this.translate.get(this.pageTitleKey).subscribe((res) => {\r\n      this.pageTitle = res;\r\n    })\r\n\r\n    this.settings.load().then(() => {\r\n      this.settingsReady = true;\r\n      this.options = this.settings.allSettings;\r\n\r\n      this._buildForm();\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    console.log('Ng All Changes');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts"],"sourceRoot":""}